# GKE-specific deployment with optimized settings
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rag-demo
  namespace: rag-demo
  labels:
    app: rag-demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rag-demo
  template:
    metadata:
      labels:
        app: rag-demo
    spec:
      containers:
      - name: rag-demo
        image: gcr.io/PROJECT_ID/rag-demo:latest  # Replace with your project ID
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: QDRANT_URL
          valueFrom:
            configMapKeyRef:
              name: rag-demo-config
              key: QDRANT_URL
        - name: QDRANT_COLLECTION
          valueFrom:
            configMapKeyRef:
              name: rag-demo-config
              key: QDRANT_COLLECTION
        - name: EMBEDDING_MODEL
          valueFrom:
            configMapKeyRef:
              name: rag-demo-config
              key: EMBEDDING_MODEL
        - name: LLM_MODEL
          valueFrom:
            configMapKeyRef:
              name: rag-demo-config
              key: LLM_MODEL
        - name: APP_HOST
          valueFrom:
            configMapKeyRef:
              name: rag-demo-config
              key: APP_HOST
        - name: APP_PORT
          valueFrom:
            configMapKeyRef:
              name: rag-demo-config
              key: APP_PORT
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: rag-demo-secrets
              key: OPENAI_API_KEY
        - name: QDRANT_API_KEY
          valueFrom:
            secretKeyRef:
              name: rag-demo-secrets
              key: QDRANT_API_KEY
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /docs
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /docs
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: rag-demo-service
  namespace: rag-demo
  labels:
    app: rag-demo
spec:
  selector:
    app: rag-demo
  ports:
  - name: http
    port: 80
    targetPort: 8080
  type: LoadBalancer
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: rag-demo-ssl-cert
  namespace: rag-demo
spec:
  domains:
    - rag-demo.yourdomain.com  # Replace with your domain
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rag-demo-ingress
  namespace: rag-demo
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "rag-demo-ip"
    networking.gke.io/managed-certificates: "rag-demo-ssl-cert"
    kubernetes.io/ingress.class: "gce"
spec:
  rules:
  - host: rag-demo.yourdomain.com
    http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: rag-demo-service
            port:
              number: 80
